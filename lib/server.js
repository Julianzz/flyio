// Generated by CoffeeScript 1.6.2
(function() {
  var EventEmitter, FileList, Vfs, app, eventEmitter, express, restful, users, vfs, vfsLocal;

  app = require('express.io')();

  users = require("./users");

  Vfs = require("vfs-local");

  express = require("express");

  FileList = require("./filelist");

  EventEmitter = require("events").EventEmitter;

  vfsLocal = require("vfs-local");

  eventEmitter = new EventEmitter();

  vfs = vfsLocal({
    root: "/Users/lzz/Sparrow/flyio/"
  });

  vfs.env = {};

  app.http().io();

  app.io.route('ready', function(req) {
    console.log("reay");
    return req.io.emit('talk', {
      message: 'io event from an io route on the server'
    });
  });

  app.set('views', __dirname + '/../views');

  app.get('/', function(req, res) {
    return res.sendfile(__dirname + '/../views/index.html');
  });

  restful = require('vfs-http-adapter')("/files", vfs);

  app.use(restful);

  app.use("/tmp", function(req, resp, next) {
    console.log('%s %s', req.method, req.url);
    return next();
  });

  app.use(express["static"](__dirname + '/public'));

  console.log(app.routes);

  console.log(app.middleware);

  app.io.sockets.on('connection', function(socket) {
    var user;

    user = users.addUser();
    socket.emit("welcome", user);
    socket.on('disconnect', function() {
      return users.removeUser(user);
    });
    socket.on("click", function() {
      user.clicks += 1;
      return app.io.sockets.emit("win", {
        message: "<strong>" + user.name + "</strong> rocks!"
      });
    });
    return socket.on("filelist", function() {
      var filelist, options;

      options = {
        path: "./data/"
      };
      filelist = new FileList();
      return filelist.exec(options, vfs, function(data) {
        console.log(data);
        return socket.emit("filelist", {
          data: data
        });
      }, function(err, data) {
        if (err) {
          console.log(err, data);
        }
        return console.log(err, data);
      });
    });
  });

  module.exports = app;

}).call(this);
