// Generated by CoffeeScript 1.6.2
(function() {
  var EventEmitter, assert, eventEmitter, manager, mm, pm, shell, tmp, values, vfs, vfsLocal;

  pm = require("./process_manager");

  shell = require("./runner/shell");

  assert = require("assert");

  EventEmitter = require("events").EventEmitter;

  tmp = {
    EventEmitter: EventEmitter,
    assert: assert
  };

  EventEmitter = tmp.EventEmitter;

  console.log(tmp);

  vfsLocal = require("vfs-local");

  eventEmitter = new EventEmitter();

  vfs = vfsLocal({
    root: "/"
  });

  vfs.env = {};

  manager = new pm.ProcessManager({
    "shell": shell.factory(vfs)
  }, eventEmitter);

  console.log(manager.spawn);

  manager.spawn("shell", {
    command: "ls",
    args: ["-l"],
    cwd: __dirname,
    env: {}
  }, "shell", function(err, pid) {
    var processes;

    assert.equal(err, null);
    processes = manager.ps();
    assert.equal(processes[pid].command, "ls -l");
    assert.equal(processes[pid].type, "shell");
    console.log(processes);
    return eventEmitter.on("shell", function(msg) {
      if (msg.type === "shell-exit") {
        processes = manager.ps();
        assert.equal(processes[pid], null);
        return;
      }
      if (msg.type === "shell-data") {
        return console.log(msg.data.toString());
      }
    });
  });

  values = {
    time: "zhong"
  };

  mm = values && values.time;

  console.log("==========" + mm);

}).call(this);
