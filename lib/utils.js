// Generated by CoffeeScript 1.6.2
(function() {
  var Util, levels, _, _slice;

  Util = require('util');

  _ = require('underscore');

  exports.extend = function(dest, src, noOverwrite) {
    var prop;

    for (prop in src) {
      if (!noOverwrite || typeof dest[prop] === 'undefined') {
        dest[prop] = src[prop];
      }
    }
    return dest;
  };

  exports.escapeRegExp = function(str) {
    return str.replace(/([.*+?^${}()|[\]\/\\])/g, '\\$1');
  };

  exports.arrayToMap = function(arr) {
    var i, map, _i, _len;

    map = {};
    for (_i = 0, _len = arr.length; _i < _len; _i++) {
      i = arr[_i];
      map[i] = 1;
    }
    return map;
  };

  levels = {
    'info': ['\033[90m', '\033[39m'],
    'error': ['\033[31m', '\033[39m'],
    'fatal': ['\033[35m', '\033[39m'],
    'exit': ['\033[36m', '\033[39m']
  };

  _slice = Array.prototype.slice;

  exports.log = function() {
    var args, lastArg, level, msg, pfx;

    args = _slice.call(arguments);
    lastArg = args[args.length - 1];
    level = levels[lastArg] ? args.pop() : 'info';
    if (!args.length) {
      return;
    }
    msg = (args.map(function(arg) {
      if (typeof arg !== 'string') {
        return Util.inspect(arg);
      } else {
        return arg;
      }
    })).join(' ');
    pfx = levels[level][0] + '[' + level + ']' + levels[level][1];
    return _.each(msg.split('\n'), function(line) {
      return console.log(pfx + ' ' + line);
    });
  };

}).call(this);
